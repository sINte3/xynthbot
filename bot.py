# bot.py ‚Äî –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –¥–ª—è aiogram 3.7+

import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.client.default import DefaultBotProperties
from xynth_scoring import get_top_tokens_with_scores

# === –¢–í–û–ò –î–ê–ù–ù–´–ï ===
BOT_TOKEN = "7833598614:AAFgdqV2LNVZmlUg-3V0b16D4zD3zSZRHgs"
ADMIN_ID = 520861  # ‚Üê –í—Å—Ç–∞–≤—å —Å–≤–æ–π Telegram ID

# === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===
bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()

# === –ö–û–ú–ê–ù–î–ê /start ===
@dp.message(CommandStart())
async def start(message: Message):
    await message.answer("ü§ñ Xynth Crypto Alert –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –Ø –ø—Ä–∏—à–ª—é —Å–∏–≥–Ω–∞–ª, –µ—Å–ª–∏ –Ω–∞–π–¥—É —Ç–æ–∫–µ–Ω —Å –≤—ã—Å–æ–∫–∏–º —Å–∫–æ—Ä–æ–º.")

# === –ê–õ–ï–†–¢-–§–£–ù–ö–¶–ò–Ø ===
async def check_and_alert():
    while True:
        tokens = get_top_tokens_with_scores()
        for token in tokens:
            if token["score"] >= 70:
                message = (
    f"üìà <b>–ù–∞–π–¥–µ–Ω –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–π —Ç–æ–∫–µ–Ω</b>\n"
    f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {token['name']} (${token['symbol']})\n"
    f"<b>–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞:</b> ${token['price']:.4f}\n"
    f"<b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ 24—á:</b> {token['change']:.2f}%\n"
    f"<b>–û–±—ä—ë–º / –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è:</b> {token['volume']:,} / {token['market_cap']:,}\n"
    f"<b>–û—Ü–µ–Ω–∫–∞ (score):</b> {token['score']:.1f}"
)
               print(f"–û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–æ–∫–µ–Ω: {token['symbol']} —Å–æ —Å–∫–æ—Ä–æ–º {token['score']}")
await bot.send_message(ADMIN_ID, message)
        await asyncio.sleep(86400)

# === –ó–ê–ü–£–°–ö ===
async def main():
    asyncio.create_task(check_and_alert())
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
